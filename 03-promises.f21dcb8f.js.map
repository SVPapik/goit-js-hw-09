{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,OAAQC,SAASC,cAAc,SAC/BC,QAASF,SAASC,cAAc,uBAChCE,OAAQH,SAASC,cAAc,sBAC/BG,SAAUJ,SAASC,cAAc,yBAKnC,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAXbT,EAAKC,OAAOe,iBAAiB,UAe7B,SAAkBC,GAChBA,EAAIC,iBACCD,EAAIE,OAAOC,QAEhB,IAAIC,EAAaC,OAAOtB,EAAKI,QAAQmB,OACjCC,EAAYF,OAAOtB,EAAKK,OAAOkB,OAC/BE,EAASH,OAAOtB,EAAKM,SAASiB,OAElC,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAQC,GAAK,EAAGA,EACnCnB,EAAcmB,EAAGL,GACdM,MAAK,EAACnB,SAAEA,EAAQC,MAAEA,MACjBX,EAAA8B,OAAOC,QAAQ,uBAAqBrB,QAAiBC,MAAU,IAEhEqB,OAAM,EAACtB,SAAEA,EAAQC,MAAEA,MAClBX,EAAA8B,OAAOG,QAAQ,sBAAoBvB,QAAeC,MAAU,IAEhEY,GAAcG,EAEhBP,EAAIe,cAAcC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  formEl: document.querySelector('.form'),\n  delayEl: document.querySelector('input[name=\"delay\"]'),\n  stepEl: document.querySelector('input[name=\"step\"]'),\n  amountEl: document.querySelector('input[name=\"amount\"]'),\n};\n\nrefs.formEl.addEventListener('submit', onSubmit);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction onSubmit(evt) {\n  evt.preventDefault();\n  if (!evt.target.tagName === 'BUTTON') return;\n\n  let firstDelay = Number(refs.delayEl.value);\n  let delayStep = Number(refs.stepEl.value);\n  let amount = Number(refs.amountEl.value);\n\n  for (let i = 1; i <= amount; i += 1, i > 0) {\n    createPromise(i, firstDelay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    firstDelay += delayStep;\n  }\n  evt.currentTarget.reset();\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$refs","formEl","document","querySelector","delayEl","stepEl","amountEl","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","evt","preventDefault","target","tagName","firstDelay","Number","value","delayStep","amount","i","then","Notify","success","catch","failure","currentTarget","reset"],"version":3,"file":"03-promises.f21dcb8f.js.map"}